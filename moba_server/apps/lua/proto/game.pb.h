// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#ifndef PROTOBUF_game_2eproto__INCLUDED
#define PROTOBUF_game_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_game_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsGuestLoginReqImpl();
void InitDefaultsGuestLoginReq();
void InitDefaultsUserCenterInfoImpl();
void InitDefaultsUserCenterInfo();
void InitDefaultsGuestLoginResImpl();
void InitDefaultsGuestLoginRes();
inline void InitDefaults() {
  InitDefaultsGuestLoginReq();
  InitDefaultsUserCenterInfo();
  InitDefaultsGuestLoginRes();
}
}  // namespace protobuf_game_2eproto
class GuestLoginReq;
class GuestLoginReqDefaultTypeInternal;
extern GuestLoginReqDefaultTypeInternal _GuestLoginReq_default_instance_;
class GuestLoginRes;
class GuestLoginResDefaultTypeInternal;
extern GuestLoginResDefaultTypeInternal _GuestLoginRes_default_instance_;
class UserCenterInfo;
class UserCenterInfoDefaultTypeInternal;
extern UserCenterInfoDefaultTypeInternal _UserCenterInfo_default_instance_;

enum Stype {
  INVALID_STYPE = 0,
  Auth = 1,
  System = 2,
  Logic = 3
};
bool Stype_IsValid(int value);
const Stype Stype_MIN = INVALID_STYPE;
const Stype Stype_MAX = Logic;
const int Stype_ARRAYSIZE = Stype_MAX + 1;

const ::google::protobuf::EnumDescriptor* Stype_descriptor();
inline const ::std::string& Stype_Name(Stype value) {
  return ::google::protobuf::internal::NameOfEnum(
    Stype_descriptor(), value);
}
inline bool Stype_Parse(
    const ::std::string& name, Stype* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Stype>(
    Stype_descriptor(), name, value);
}
enum Cmd {
  INVALID_CMD = 0,
  eGuestLoginReq = 1,
  eGuestLoginRes = 2
};
bool Cmd_IsValid(int value);
const Cmd Cmd_MIN = INVALID_CMD;
const Cmd Cmd_MAX = eGuestLoginRes;
const int Cmd_ARRAYSIZE = Cmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* Cmd_descriptor();
inline const ::std::string& Cmd_Name(Cmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    Cmd_descriptor(), value);
}
inline bool Cmd_Parse(
    const ::std::string& name, Cmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Cmd>(
    Cmd_descriptor(), name, value);
}
// ===================================================================

class GuestLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuestLoginReq) */ {
 public:
  GuestLoginReq();
  virtual ~GuestLoginReq();

  GuestLoginReq(const GuestLoginReq& from);

  inline GuestLoginReq& operator=(const GuestLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuestLoginReq(GuestLoginReq&& from) noexcept
    : GuestLoginReq() {
    *this = ::std::move(from);
  }

  inline GuestLoginReq& operator=(GuestLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuestLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuestLoginReq* internal_default_instance() {
    return reinterpret_cast<const GuestLoginReq*>(
               &_GuestLoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GuestLoginReq* other);
  friend void swap(GuestLoginReq& a, GuestLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuestLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GuestLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuestLoginReq& from);
  void MergeFrom(const GuestLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuestLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string guestkey = 1;
  bool has_guestkey() const;
  void clear_guestkey();
  static const int kGuestkeyFieldNumber = 1;
  const ::std::string& guestkey() const;
  void set_guestkey(const ::std::string& value);
  #if LANG_CXX11
  void set_guestkey(::std::string&& value);
  #endif
  void set_guestkey(const char* value);
  void set_guestkey(const char* value, size_t size);
  ::std::string* mutable_guestkey();
  ::std::string* release_guestkey();
  void set_allocated_guestkey(::std::string* guestkey);

  // @@protoc_insertion_point(class_scope:GuestLoginReq)
 private:
  void set_has_guestkey();
  void clear_has_guestkey();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr guestkey_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGuestLoginReqImpl();
};
// -------------------------------------------------------------------

class UserCenterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserCenterInfo) */ {
 public:
  UserCenterInfo();
  virtual ~UserCenterInfo();

  UserCenterInfo(const UserCenterInfo& from);

  inline UserCenterInfo& operator=(const UserCenterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserCenterInfo(UserCenterInfo&& from) noexcept
    : UserCenterInfo() {
    *this = ::std::move(from);
  }

  inline UserCenterInfo& operator=(UserCenterInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserCenterInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserCenterInfo* internal_default_instance() {
    return reinterpret_cast<const UserCenterInfo*>(
               &_UserCenterInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(UserCenterInfo* other);
  friend void swap(UserCenterInfo& a, UserCenterInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserCenterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UserCenterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserCenterInfo& from);
  void MergeFrom(const UserCenterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserCenterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string unick = 1;
  bool has_unick() const;
  void clear_unick();
  static const int kUnickFieldNumber = 1;
  const ::std::string& unick() const;
  void set_unick(const ::std::string& value);
  #if LANG_CXX11
  void set_unick(::std::string&& value);
  #endif
  void set_unick(const char* value);
  void set_unick(const char* value, size_t size);
  ::std::string* mutable_unick();
  ::std::string* release_unick();
  void set_allocated_unick(::std::string* unick);

  // required int32 sex = 2;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 2;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // required int32 face = 3;
  bool has_face() const;
  void clear_face();
  static const int kFaceFieldNumber = 3;
  ::google::protobuf::int32 face() const;
  void set_face(::google::protobuf::int32 value);

  // required int32 uvip = 4;
  bool has_uvip() const;
  void clear_uvip();
  static const int kUvipFieldNumber = 4;
  ::google::protobuf::int32 uvip() const;
  void set_uvip(::google::protobuf::int32 value);

  // required int32 uid = 5;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 5;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UserCenterInfo)
 private:
  void set_has_unick();
  void clear_has_unick();
  void set_has_sex();
  void clear_has_sex();
  void set_has_face();
  void clear_has_face();
  void set_has_uvip();
  void clear_has_uvip();
  void set_has_uid();
  void clear_has_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr unick_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 face_;
  ::google::protobuf::int32 uvip_;
  ::google::protobuf::int32 uid_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUserCenterInfoImpl();
};
// -------------------------------------------------------------------

class GuestLoginRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuestLoginRes) */ {
 public:
  GuestLoginRes();
  virtual ~GuestLoginRes();

  GuestLoginRes(const GuestLoginRes& from);

  inline GuestLoginRes& operator=(const GuestLoginRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuestLoginRes(GuestLoginRes&& from) noexcept
    : GuestLoginRes() {
    *this = ::std::move(from);
  }

  inline GuestLoginRes& operator=(GuestLoginRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuestLoginRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuestLoginRes* internal_default_instance() {
    return reinterpret_cast<const GuestLoginRes*>(
               &_GuestLoginRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GuestLoginRes* other);
  friend void swap(GuestLoginRes& a, GuestLoginRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuestLoginRes* New() const PROTOBUF_FINAL { return New(NULL); }

  GuestLoginRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuestLoginRes& from);
  void MergeFrom(const GuestLoginRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuestLoginRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .UserCenterInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::UserCenterInfo& info() const;
  ::UserCenterInfo* release_info();
  ::UserCenterInfo* mutable_info();
  void set_allocated_info(::UserCenterInfo* info);

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuestLoginRes)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::UserCenterInfo* info_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGuestLoginResImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GuestLoginReq

// required string guestkey = 1;
inline bool GuestLoginReq::has_guestkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuestLoginReq::set_has_guestkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuestLoginReq::clear_has_guestkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuestLoginReq::clear_guestkey() {
  guestkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guestkey();
}
inline const ::std::string& GuestLoginReq::guestkey() const {
  // @@protoc_insertion_point(field_get:GuestLoginReq.guestkey)
  return guestkey_.GetNoArena();
}
inline void GuestLoginReq::set_guestkey(const ::std::string& value) {
  set_has_guestkey();
  guestkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuestLoginReq.guestkey)
}
#if LANG_CXX11
inline void GuestLoginReq::set_guestkey(::std::string&& value) {
  set_has_guestkey();
  guestkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuestLoginReq.guestkey)
}
#endif
inline void GuestLoginReq::set_guestkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guestkey();
  guestkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuestLoginReq.guestkey)
}
inline void GuestLoginReq::set_guestkey(const char* value, size_t size) {
  set_has_guestkey();
  guestkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuestLoginReq.guestkey)
}
inline ::std::string* GuestLoginReq::mutable_guestkey() {
  set_has_guestkey();
  // @@protoc_insertion_point(field_mutable:GuestLoginReq.guestkey)
  return guestkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuestLoginReq::release_guestkey() {
  // @@protoc_insertion_point(field_release:GuestLoginReq.guestkey)
  clear_has_guestkey();
  return guestkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuestLoginReq::set_allocated_guestkey(::std::string* guestkey) {
  if (guestkey != NULL) {
    set_has_guestkey();
  } else {
    clear_has_guestkey();
  }
  guestkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guestkey);
  // @@protoc_insertion_point(field_set_allocated:GuestLoginReq.guestkey)
}

// -------------------------------------------------------------------

// UserCenterInfo

// required string unick = 1;
inline bool UserCenterInfo::has_unick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserCenterInfo::set_has_unick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserCenterInfo::clear_has_unick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserCenterInfo::clear_unick() {
  unick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_unick();
}
inline const ::std::string& UserCenterInfo::unick() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.unick)
  return unick_.GetNoArena();
}
inline void UserCenterInfo::set_unick(const ::std::string& value) {
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserCenterInfo.unick)
}
#if LANG_CXX11
inline void UserCenterInfo::set_unick(::std::string&& value) {
  set_has_unick();
  unick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserCenterInfo.unick)
}
#endif
inline void UserCenterInfo::set_unick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserCenterInfo.unick)
}
inline void UserCenterInfo::set_unick(const char* value, size_t size) {
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserCenterInfo.unick)
}
inline ::std::string* UserCenterInfo::mutable_unick() {
  set_has_unick();
  // @@protoc_insertion_point(field_mutable:UserCenterInfo.unick)
  return unick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserCenterInfo::release_unick() {
  // @@protoc_insertion_point(field_release:UserCenterInfo.unick)
  clear_has_unick();
  return unick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserCenterInfo::set_allocated_unick(::std::string* unick) {
  if (unick != NULL) {
    set_has_unick();
  } else {
    clear_has_unick();
  }
  unick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unick);
  // @@protoc_insertion_point(field_set_allocated:UserCenterInfo.unick)
}

// required int32 sex = 2;
inline bool UserCenterInfo::has_sex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserCenterInfo::set_has_sex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserCenterInfo::clear_has_sex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserCenterInfo::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 UserCenterInfo::sex() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.sex)
  return sex_;
}
inline void UserCenterInfo::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:UserCenterInfo.sex)
}

// required int32 face = 3;
inline bool UserCenterInfo::has_face() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserCenterInfo::set_has_face() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserCenterInfo::clear_has_face() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserCenterInfo::clear_face() {
  face_ = 0;
  clear_has_face();
}
inline ::google::protobuf::int32 UserCenterInfo::face() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.face)
  return face_;
}
inline void UserCenterInfo::set_face(::google::protobuf::int32 value) {
  set_has_face();
  face_ = value;
  // @@protoc_insertion_point(field_set:UserCenterInfo.face)
}

// required int32 uvip = 4;
inline bool UserCenterInfo::has_uvip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserCenterInfo::set_has_uvip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserCenterInfo::clear_has_uvip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserCenterInfo::clear_uvip() {
  uvip_ = 0;
  clear_has_uvip();
}
inline ::google::protobuf::int32 UserCenterInfo::uvip() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.uvip)
  return uvip_;
}
inline void UserCenterInfo::set_uvip(::google::protobuf::int32 value) {
  set_has_uvip();
  uvip_ = value;
  // @@protoc_insertion_point(field_set:UserCenterInfo.uvip)
}

// required int32 uid = 5;
inline bool UserCenterInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserCenterInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserCenterInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserCenterInfo::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 UserCenterInfo::uid() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.uid)
  return uid_;
}
inline void UserCenterInfo::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:UserCenterInfo.uid)
}

// -------------------------------------------------------------------

// GuestLoginRes

// required int32 status = 1;
inline bool GuestLoginRes::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuestLoginRes::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuestLoginRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuestLoginRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GuestLoginRes::status() const {
  // @@protoc_insertion_point(field_get:GuestLoginRes.status)
  return status_;
}
inline void GuestLoginRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:GuestLoginRes.status)
}

// optional .UserCenterInfo info = 2;
inline bool GuestLoginRes::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuestLoginRes::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuestLoginRes::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuestLoginRes::clear_info() {
  if (info_ != NULL) info_->Clear();
  clear_has_info();
}
inline const ::UserCenterInfo& GuestLoginRes::info() const {
  const ::UserCenterInfo* p = info_;
  // @@protoc_insertion_point(field_get:GuestLoginRes.info)
  return p != NULL ? *p : *reinterpret_cast<const ::UserCenterInfo*>(
      &::_UserCenterInfo_default_instance_);
}
inline ::UserCenterInfo* GuestLoginRes::release_info() {
  // @@protoc_insertion_point(field_release:GuestLoginRes.info)
  clear_has_info();
  ::UserCenterInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::UserCenterInfo* GuestLoginRes::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::UserCenterInfo;
  }
  // @@protoc_insertion_point(field_mutable:GuestLoginRes.info)
  return info_;
}
inline void GuestLoginRes::set_allocated_info(::UserCenterInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    set_has_info();
  } else {
    clear_has_info();
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:GuestLoginRes.info)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Stype> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Stype>() {
  return ::Stype_descriptor();
}
template <> struct is_proto_enum< ::Cmd> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd>() {
  return ::Cmd_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_2eproto__INCLUDED
