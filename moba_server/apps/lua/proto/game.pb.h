// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#ifndef PROTOBUF_game_2eproto__INCLUDED
#define PROTOBUF_game_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_game_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[20];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsGuestLoginReqImpl();
void InitDefaultsGuestLoginReq();
void InitDefaultsUnameLoginReqImpl();
void InitDefaultsUnameLoginReq();
void InitDefaultsUserCenterInfoImpl();
void InitDefaultsUserCenterInfo();
void InitDefaultsGuestLoginResImpl();
void InitDefaultsGuestLoginRes();
void InitDefaultsUnameLoginResImpl();
void InitDefaultsUnameLoginRes();
void InitDefaultsUserLostConnImpl();
void InitDefaultsUserLostConn();
void InitDefaultsReloginImpl();
void InitDefaultsRelogin();
void InitDefaultsEditProfileReqImpl();
void InitDefaultsEditProfileReq();
void InitDefaultsEditProfileResImpl();
void InitDefaultsEditProfileRes();
void InitDefaultsAccountUpgradeReqImpl();
void InitDefaultsAccountUpgradeReq();
void InitDefaultsAccountUpgradeResImpl();
void InitDefaultsAccountUpgradeRes();
void InitDefaultsLoginOutResImpl();
void InitDefaultsLoginOutRes();
void InitDefaultsUserGameInfoImpl();
void InitDefaultsUserGameInfo();
void InitDefaultsGetUgameInfoResImpl();
void InitDefaultsGetUgameInfoRes();
void InitDefaultsRecvLoginBonuesResImpl();
void InitDefaultsRecvLoginBonuesRes();
void InitDefaultsWorldChipRankInfoImpl();
void InitDefaultsWorldChipRankInfo();
void InitDefaultsGetWorldRankUchipReqImpl();
void InitDefaultsGetWorldRankUchipReq();
void InitDefaultsGetWorldRankUchipResImpl();
void InitDefaultsGetWorldRankUchipRes();
void InitDefaultsGetSystemMessageReqImpl();
void InitDefaultsGetSystemMessageReq();
void InitDefaultsGetSystemMessageResImpl();
void InitDefaultsGetSystemMessageRes();
inline void InitDefaults() {
  InitDefaultsGuestLoginReq();
  InitDefaultsUnameLoginReq();
  InitDefaultsUserCenterInfo();
  InitDefaultsGuestLoginRes();
  InitDefaultsUnameLoginRes();
  InitDefaultsUserLostConn();
  InitDefaultsRelogin();
  InitDefaultsEditProfileReq();
  InitDefaultsEditProfileRes();
  InitDefaultsAccountUpgradeReq();
  InitDefaultsAccountUpgradeRes();
  InitDefaultsLoginOutRes();
  InitDefaultsUserGameInfo();
  InitDefaultsGetUgameInfoRes();
  InitDefaultsRecvLoginBonuesRes();
  InitDefaultsWorldChipRankInfo();
  InitDefaultsGetWorldRankUchipReq();
  InitDefaultsGetWorldRankUchipRes();
  InitDefaultsGetSystemMessageReq();
  InitDefaultsGetSystemMessageRes();
}
}  // namespace protobuf_game_2eproto
class AccountUpgradeReq;
class AccountUpgradeReqDefaultTypeInternal;
extern AccountUpgradeReqDefaultTypeInternal _AccountUpgradeReq_default_instance_;
class AccountUpgradeRes;
class AccountUpgradeResDefaultTypeInternal;
extern AccountUpgradeResDefaultTypeInternal _AccountUpgradeRes_default_instance_;
class EditProfileReq;
class EditProfileReqDefaultTypeInternal;
extern EditProfileReqDefaultTypeInternal _EditProfileReq_default_instance_;
class EditProfileRes;
class EditProfileResDefaultTypeInternal;
extern EditProfileResDefaultTypeInternal _EditProfileRes_default_instance_;
class GetSystemMessageReq;
class GetSystemMessageReqDefaultTypeInternal;
extern GetSystemMessageReqDefaultTypeInternal _GetSystemMessageReq_default_instance_;
class GetSystemMessageRes;
class GetSystemMessageResDefaultTypeInternal;
extern GetSystemMessageResDefaultTypeInternal _GetSystemMessageRes_default_instance_;
class GetUgameInfoRes;
class GetUgameInfoResDefaultTypeInternal;
extern GetUgameInfoResDefaultTypeInternal _GetUgameInfoRes_default_instance_;
class GetWorldRankUchipReq;
class GetWorldRankUchipReqDefaultTypeInternal;
extern GetWorldRankUchipReqDefaultTypeInternal _GetWorldRankUchipReq_default_instance_;
class GetWorldRankUchipRes;
class GetWorldRankUchipResDefaultTypeInternal;
extern GetWorldRankUchipResDefaultTypeInternal _GetWorldRankUchipRes_default_instance_;
class GuestLoginReq;
class GuestLoginReqDefaultTypeInternal;
extern GuestLoginReqDefaultTypeInternal _GuestLoginReq_default_instance_;
class GuestLoginRes;
class GuestLoginResDefaultTypeInternal;
extern GuestLoginResDefaultTypeInternal _GuestLoginRes_default_instance_;
class LoginOutRes;
class LoginOutResDefaultTypeInternal;
extern LoginOutResDefaultTypeInternal _LoginOutRes_default_instance_;
class RecvLoginBonuesRes;
class RecvLoginBonuesResDefaultTypeInternal;
extern RecvLoginBonuesResDefaultTypeInternal _RecvLoginBonuesRes_default_instance_;
class Relogin;
class ReloginDefaultTypeInternal;
extern ReloginDefaultTypeInternal _Relogin_default_instance_;
class UnameLoginReq;
class UnameLoginReqDefaultTypeInternal;
extern UnameLoginReqDefaultTypeInternal _UnameLoginReq_default_instance_;
class UnameLoginRes;
class UnameLoginResDefaultTypeInternal;
extern UnameLoginResDefaultTypeInternal _UnameLoginRes_default_instance_;
class UserCenterInfo;
class UserCenterInfoDefaultTypeInternal;
extern UserCenterInfoDefaultTypeInternal _UserCenterInfo_default_instance_;
class UserGameInfo;
class UserGameInfoDefaultTypeInternal;
extern UserGameInfoDefaultTypeInternal _UserGameInfo_default_instance_;
class UserLostConn;
class UserLostConnDefaultTypeInternal;
extern UserLostConnDefaultTypeInternal _UserLostConn_default_instance_;
class WorldChipRankInfo;
class WorldChipRankInfoDefaultTypeInternal;
extern WorldChipRankInfoDefaultTypeInternal _WorldChipRankInfo_default_instance_;

enum Stype {
  INVALID_STYPE = 0,
  Auth = 1,
  System = 2,
  Logic = 3
};
bool Stype_IsValid(int value);
const Stype Stype_MIN = INVALID_STYPE;
const Stype Stype_MAX = Logic;
const int Stype_ARRAYSIZE = Stype_MAX + 1;

const ::google::protobuf::EnumDescriptor* Stype_descriptor();
inline const ::std::string& Stype_Name(Stype value) {
  return ::google::protobuf::internal::NameOfEnum(
    Stype_descriptor(), value);
}
inline bool Stype_Parse(
    const ::std::string& name, Stype* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Stype>(
    Stype_descriptor(), name, value);
}
enum Cmd {
  INVALID_CMD = 0,
  eGuestLoginReq = 1,
  eGuestLoginRes = 2,
  eRelogin = 3,
  eUserLostConn = 4,
  eEditProfileReq = 5,
  eEditProfileRes = 6,
  eAccountUpgradeReq = 7,
  eAccountUpgradeRes = 8,
  eUnameLoginReq = 9,
  eUnameLoginRes = 10,
  eLoginOutReq = 11,
  eLoginOutRes = 12,
  eGetUgameInfoReq = 13,
  eGetUgameInfoRes = 14,
  eRecvLoginBonuesReq = 15,
  eRecvLoginBonuesRes = 16,
  eGetWorldRankUchipReq = 17,
  eGetWorldRankUchipRes = 18,
  eGetSystemMessageReq = 19,
  eGetSystemMessageRes = 20
};
bool Cmd_IsValid(int value);
const Cmd Cmd_MIN = INVALID_CMD;
const Cmd Cmd_MAX = eGetSystemMessageRes;
const int Cmd_ARRAYSIZE = Cmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* Cmd_descriptor();
inline const ::std::string& Cmd_Name(Cmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    Cmd_descriptor(), value);
}
inline bool Cmd_Parse(
    const ::std::string& name, Cmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Cmd>(
    Cmd_descriptor(), name, value);
}
// ===================================================================

class GuestLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuestLoginReq) */ {
 public:
  GuestLoginReq();
  virtual ~GuestLoginReq();

  GuestLoginReq(const GuestLoginReq& from);

  inline GuestLoginReq& operator=(const GuestLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuestLoginReq(GuestLoginReq&& from) noexcept
    : GuestLoginReq() {
    *this = ::std::move(from);
  }

  inline GuestLoginReq& operator=(GuestLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuestLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuestLoginReq* internal_default_instance() {
    return reinterpret_cast<const GuestLoginReq*>(
               &_GuestLoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GuestLoginReq* other);
  friend void swap(GuestLoginReq& a, GuestLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuestLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GuestLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuestLoginReq& from);
  void MergeFrom(const GuestLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuestLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string guestkey = 1;
  bool has_guestkey() const;
  void clear_guestkey();
  static const int kGuestkeyFieldNumber = 1;
  const ::std::string& guestkey() const;
  void set_guestkey(const ::std::string& value);
  #if LANG_CXX11
  void set_guestkey(::std::string&& value);
  #endif
  void set_guestkey(const char* value);
  void set_guestkey(const char* value, size_t size);
  ::std::string* mutable_guestkey();
  ::std::string* release_guestkey();
  void set_allocated_guestkey(::std::string* guestkey);

  // @@protoc_insertion_point(class_scope:GuestLoginReq)
 private:
  void set_has_guestkey();
  void clear_has_guestkey();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr guestkey_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGuestLoginReqImpl();
};
// -------------------------------------------------------------------

class UnameLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UnameLoginReq) */ {
 public:
  UnameLoginReq();
  virtual ~UnameLoginReq();

  UnameLoginReq(const UnameLoginReq& from);

  inline UnameLoginReq& operator=(const UnameLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnameLoginReq(UnameLoginReq&& from) noexcept
    : UnameLoginReq() {
    *this = ::std::move(from);
  }

  inline UnameLoginReq& operator=(UnameLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnameLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnameLoginReq* internal_default_instance() {
    return reinterpret_cast<const UnameLoginReq*>(
               &_UnameLoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(UnameLoginReq* other);
  friend void swap(UnameLoginReq& a, UnameLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnameLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UnameLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnameLoginReq& from);
  void MergeFrom(const UnameLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnameLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string uname = 1;
  bool has_uname() const;
  void clear_uname();
  static const int kUnameFieldNumber = 1;
  const ::std::string& uname() const;
  void set_uname(const ::std::string& value);
  #if LANG_CXX11
  void set_uname(::std::string&& value);
  #endif
  void set_uname(const char* value);
  void set_uname(const char* value, size_t size);
  ::std::string* mutable_uname();
  ::std::string* release_uname();
  void set_allocated_uname(::std::string* uname);

  // required string upwd = 2;
  bool has_upwd() const;
  void clear_upwd();
  static const int kUpwdFieldNumber = 2;
  const ::std::string& upwd() const;
  void set_upwd(const ::std::string& value);
  #if LANG_CXX11
  void set_upwd(::std::string&& value);
  #endif
  void set_upwd(const char* value);
  void set_upwd(const char* value, size_t size);
  ::std::string* mutable_upwd();
  ::std::string* release_upwd();
  void set_allocated_upwd(::std::string* upwd);

  // @@protoc_insertion_point(class_scope:UnameLoginReq)
 private:
  void set_has_uname();
  void clear_has_uname();
  void set_has_upwd();
  void clear_has_upwd();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr uname_;
  ::google::protobuf::internal::ArenaStringPtr upwd_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUnameLoginReqImpl();
};
// -------------------------------------------------------------------

class UserCenterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserCenterInfo) */ {
 public:
  UserCenterInfo();
  virtual ~UserCenterInfo();

  UserCenterInfo(const UserCenterInfo& from);

  inline UserCenterInfo& operator=(const UserCenterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserCenterInfo(UserCenterInfo&& from) noexcept
    : UserCenterInfo() {
    *this = ::std::move(from);
  }

  inline UserCenterInfo& operator=(UserCenterInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserCenterInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserCenterInfo* internal_default_instance() {
    return reinterpret_cast<const UserCenterInfo*>(
               &_UserCenterInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(UserCenterInfo* other);
  friend void swap(UserCenterInfo& a, UserCenterInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserCenterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UserCenterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserCenterInfo& from);
  void MergeFrom(const UserCenterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserCenterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string unick = 1;
  bool has_unick() const;
  void clear_unick();
  static const int kUnickFieldNumber = 1;
  const ::std::string& unick() const;
  void set_unick(const ::std::string& value);
  #if LANG_CXX11
  void set_unick(::std::string&& value);
  #endif
  void set_unick(const char* value);
  void set_unick(const char* value, size_t size);
  ::std::string* mutable_unick();
  ::std::string* release_unick();
  void set_allocated_unick(::std::string* unick);

  // required int32 sex = 2;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 2;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // required int32 face = 3;
  bool has_face() const;
  void clear_face();
  static const int kFaceFieldNumber = 3;
  ::google::protobuf::int32 face() const;
  void set_face(::google::protobuf::int32 value);

  // required int32 uvip = 4;
  bool has_uvip() const;
  void clear_uvip();
  static const int kUvipFieldNumber = 4;
  ::google::protobuf::int32 uvip() const;
  void set_uvip(::google::protobuf::int32 value);

  // required int32 uid = 5;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 5;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UserCenterInfo)
 private:
  void set_has_unick();
  void clear_has_unick();
  void set_has_sex();
  void clear_has_sex();
  void set_has_face();
  void clear_has_face();
  void set_has_uvip();
  void clear_has_uvip();
  void set_has_uid();
  void clear_has_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr unick_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 face_;
  ::google::protobuf::int32 uvip_;
  ::google::protobuf::int32 uid_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUserCenterInfoImpl();
};
// -------------------------------------------------------------------

class GuestLoginRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuestLoginRes) */ {
 public:
  GuestLoginRes();
  virtual ~GuestLoginRes();

  GuestLoginRes(const GuestLoginRes& from);

  inline GuestLoginRes& operator=(const GuestLoginRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuestLoginRes(GuestLoginRes&& from) noexcept
    : GuestLoginRes() {
    *this = ::std::move(from);
  }

  inline GuestLoginRes& operator=(GuestLoginRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuestLoginRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuestLoginRes* internal_default_instance() {
    return reinterpret_cast<const GuestLoginRes*>(
               &_GuestLoginRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(GuestLoginRes* other);
  friend void swap(GuestLoginRes& a, GuestLoginRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuestLoginRes* New() const PROTOBUF_FINAL { return New(NULL); }

  GuestLoginRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuestLoginRes& from);
  void MergeFrom(const GuestLoginRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuestLoginRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .UserCenterInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::UserCenterInfo& info() const;
  ::UserCenterInfo* release_info();
  ::UserCenterInfo* mutable_info();
  void set_allocated_info(::UserCenterInfo* info);

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuestLoginRes)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::UserCenterInfo* info_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGuestLoginResImpl();
};
// -------------------------------------------------------------------

class UnameLoginRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UnameLoginRes) */ {
 public:
  UnameLoginRes();
  virtual ~UnameLoginRes();

  UnameLoginRes(const UnameLoginRes& from);

  inline UnameLoginRes& operator=(const UnameLoginRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnameLoginRes(UnameLoginRes&& from) noexcept
    : UnameLoginRes() {
    *this = ::std::move(from);
  }

  inline UnameLoginRes& operator=(UnameLoginRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnameLoginRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnameLoginRes* internal_default_instance() {
    return reinterpret_cast<const UnameLoginRes*>(
               &_UnameLoginRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(UnameLoginRes* other);
  friend void swap(UnameLoginRes& a, UnameLoginRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnameLoginRes* New() const PROTOBUF_FINAL { return New(NULL); }

  UnameLoginRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnameLoginRes& from);
  void MergeFrom(const UnameLoginRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnameLoginRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .UserCenterInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::UserCenterInfo& info() const;
  ::UserCenterInfo* release_info();
  ::UserCenterInfo* mutable_info();
  void set_allocated_info(::UserCenterInfo* info);

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UnameLoginRes)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::UserCenterInfo* info_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUnameLoginResImpl();
};
// -------------------------------------------------------------------

class UserLostConn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserLostConn) */ {
 public:
  UserLostConn();
  virtual ~UserLostConn();

  UserLostConn(const UserLostConn& from);

  inline UserLostConn& operator=(const UserLostConn& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserLostConn(UserLostConn&& from) noexcept
    : UserLostConn() {
    *this = ::std::move(from);
  }

  inline UserLostConn& operator=(UserLostConn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLostConn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserLostConn* internal_default_instance() {
    return reinterpret_cast<const UserLostConn*>(
               &_UserLostConn_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(UserLostConn* other);
  friend void swap(UserLostConn& a, UserLostConn& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserLostConn* New() const PROTOBUF_FINAL { return New(NULL); }

  UserLostConn* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserLostConn& from);
  void MergeFrom(const UserLostConn& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserLostConn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UserLostConn)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUserLostConnImpl();
};
// -------------------------------------------------------------------

class Relogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Relogin) */ {
 public:
  Relogin();
  virtual ~Relogin();

  Relogin(const Relogin& from);

  inline Relogin& operator=(const Relogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Relogin(Relogin&& from) noexcept
    : Relogin() {
    *this = ::std::move(from);
  }

  inline Relogin& operator=(Relogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Relogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Relogin* internal_default_instance() {
    return reinterpret_cast<const Relogin*>(
               &_Relogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Relogin* other);
  friend void swap(Relogin& a, Relogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Relogin* New() const PROTOBUF_FINAL { return New(NULL); }

  Relogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Relogin& from);
  void MergeFrom(const Relogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Relogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Relogin)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsReloginImpl();
};
// -------------------------------------------------------------------

class EditProfileReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EditProfileReq) */ {
 public:
  EditProfileReq();
  virtual ~EditProfileReq();

  EditProfileReq(const EditProfileReq& from);

  inline EditProfileReq& operator=(const EditProfileReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EditProfileReq(EditProfileReq&& from) noexcept
    : EditProfileReq() {
    *this = ::std::move(from);
  }

  inline EditProfileReq& operator=(EditProfileReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EditProfileReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EditProfileReq* internal_default_instance() {
    return reinterpret_cast<const EditProfileReq*>(
               &_EditProfileReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(EditProfileReq* other);
  friend void swap(EditProfileReq& a, EditProfileReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EditProfileReq* New() const PROTOBUF_FINAL { return New(NULL); }

  EditProfileReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EditProfileReq& from);
  void MergeFrom(const EditProfileReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EditProfileReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string unick = 1;
  bool has_unick() const;
  void clear_unick();
  static const int kUnickFieldNumber = 1;
  const ::std::string& unick() const;
  void set_unick(const ::std::string& value);
  #if LANG_CXX11
  void set_unick(::std::string&& value);
  #endif
  void set_unick(const char* value);
  void set_unick(const char* value, size_t size);
  ::std::string* mutable_unick();
  ::std::string* release_unick();
  void set_allocated_unick(::std::string* unick);

  // required int32 uface = 2;
  bool has_uface() const;
  void clear_uface();
  static const int kUfaceFieldNumber = 2;
  ::google::protobuf::int32 uface() const;
  void set_uface(::google::protobuf::int32 value);

  // required int32 usex = 3;
  bool has_usex() const;
  void clear_usex();
  static const int kUsexFieldNumber = 3;
  ::google::protobuf::int32 usex() const;
  void set_usex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EditProfileReq)
 private:
  void set_has_unick();
  void clear_has_unick();
  void set_has_uface();
  void clear_has_uface();
  void set_has_usex();
  void clear_has_usex();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr unick_;
  ::google::protobuf::int32 uface_;
  ::google::protobuf::int32 usex_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsEditProfileReqImpl();
};
// -------------------------------------------------------------------

class EditProfileRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EditProfileRes) */ {
 public:
  EditProfileRes();
  virtual ~EditProfileRes();

  EditProfileRes(const EditProfileRes& from);

  inline EditProfileRes& operator=(const EditProfileRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EditProfileRes(EditProfileRes&& from) noexcept
    : EditProfileRes() {
    *this = ::std::move(from);
  }

  inline EditProfileRes& operator=(EditProfileRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EditProfileRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EditProfileRes* internal_default_instance() {
    return reinterpret_cast<const EditProfileRes*>(
               &_EditProfileRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(EditProfileRes* other);
  friend void swap(EditProfileRes& a, EditProfileRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EditProfileRes* New() const PROTOBUF_FINAL { return New(NULL); }

  EditProfileRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EditProfileRes& from);
  void MergeFrom(const EditProfileRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EditProfileRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EditProfileRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsEditProfileResImpl();
};
// -------------------------------------------------------------------

class AccountUpgradeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountUpgradeReq) */ {
 public:
  AccountUpgradeReq();
  virtual ~AccountUpgradeReq();

  AccountUpgradeReq(const AccountUpgradeReq& from);

  inline AccountUpgradeReq& operator=(const AccountUpgradeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountUpgradeReq(AccountUpgradeReq&& from) noexcept
    : AccountUpgradeReq() {
    *this = ::std::move(from);
  }

  inline AccountUpgradeReq& operator=(AccountUpgradeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountUpgradeReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountUpgradeReq* internal_default_instance() {
    return reinterpret_cast<const AccountUpgradeReq*>(
               &_AccountUpgradeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(AccountUpgradeReq* other);
  friend void swap(AccountUpgradeReq& a, AccountUpgradeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountUpgradeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountUpgradeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountUpgradeReq& from);
  void MergeFrom(const AccountUpgradeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountUpgradeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string uname = 1;
  bool has_uname() const;
  void clear_uname();
  static const int kUnameFieldNumber = 1;
  const ::std::string& uname() const;
  void set_uname(const ::std::string& value);
  #if LANG_CXX11
  void set_uname(::std::string&& value);
  #endif
  void set_uname(const char* value);
  void set_uname(const char* value, size_t size);
  ::std::string* mutable_uname();
  ::std::string* release_uname();
  void set_allocated_uname(::std::string* uname);

  // required string upwdmd5 = 2;
  bool has_upwdmd5() const;
  void clear_upwdmd5();
  static const int kUpwdmd5FieldNumber = 2;
  const ::std::string& upwdmd5() const;
  void set_upwdmd5(const ::std::string& value);
  #if LANG_CXX11
  void set_upwdmd5(::std::string&& value);
  #endif
  void set_upwdmd5(const char* value);
  void set_upwdmd5(const char* value, size_t size);
  ::std::string* mutable_upwdmd5();
  ::std::string* release_upwdmd5();
  void set_allocated_upwdmd5(::std::string* upwdmd5);

  // @@protoc_insertion_point(class_scope:AccountUpgradeReq)
 private:
  void set_has_uname();
  void clear_has_uname();
  void set_has_upwdmd5();
  void clear_has_upwdmd5();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr uname_;
  ::google::protobuf::internal::ArenaStringPtr upwdmd5_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsAccountUpgradeReqImpl();
};
// -------------------------------------------------------------------

class AccountUpgradeRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountUpgradeRes) */ {
 public:
  AccountUpgradeRes();
  virtual ~AccountUpgradeRes();

  AccountUpgradeRes(const AccountUpgradeRes& from);

  inline AccountUpgradeRes& operator=(const AccountUpgradeRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountUpgradeRes(AccountUpgradeRes&& from) noexcept
    : AccountUpgradeRes() {
    *this = ::std::move(from);
  }

  inline AccountUpgradeRes& operator=(AccountUpgradeRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountUpgradeRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountUpgradeRes* internal_default_instance() {
    return reinterpret_cast<const AccountUpgradeRes*>(
               &_AccountUpgradeRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(AccountUpgradeRes* other);
  friend void swap(AccountUpgradeRes& a, AccountUpgradeRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountUpgradeRes* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountUpgradeRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountUpgradeRes& from);
  void MergeFrom(const AccountUpgradeRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountUpgradeRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AccountUpgradeRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsAccountUpgradeResImpl();
};
// -------------------------------------------------------------------

class LoginOutRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginOutRes) */ {
 public:
  LoginOutRes();
  virtual ~LoginOutRes();

  LoginOutRes(const LoginOutRes& from);

  inline LoginOutRes& operator=(const LoginOutRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginOutRes(LoginOutRes&& from) noexcept
    : LoginOutRes() {
    *this = ::std::move(from);
  }

  inline LoginOutRes& operator=(LoginOutRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginOutRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginOutRes* internal_default_instance() {
    return reinterpret_cast<const LoginOutRes*>(
               &_LoginOutRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(LoginOutRes* other);
  friend void swap(LoginOutRes& a, LoginOutRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginOutRes* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginOutRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginOutRes& from);
  void MergeFrom(const LoginOutRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginOutRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginOutRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsLoginOutResImpl();
};
// -------------------------------------------------------------------

class UserGameInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserGameInfo) */ {
 public:
  UserGameInfo();
  virtual ~UserGameInfo();

  UserGameInfo(const UserGameInfo& from);

  inline UserGameInfo& operator=(const UserGameInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserGameInfo(UserGameInfo&& from) noexcept
    : UserGameInfo() {
    *this = ::std::move(from);
  }

  inline UserGameInfo& operator=(UserGameInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserGameInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserGameInfo* internal_default_instance() {
    return reinterpret_cast<const UserGameInfo*>(
               &_UserGameInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(UserGameInfo* other);
  friend void swap(UserGameInfo& a, UserGameInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserGameInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UserGameInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserGameInfo& from);
  void MergeFrom(const UserGameInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserGameInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 uchip = 1;
  bool has_uchip() const;
  void clear_uchip();
  static const int kUchipFieldNumber = 1;
  ::google::protobuf::int32 uchip() const;
  void set_uchip(::google::protobuf::int32 value);

  // required int32 uchip1 = 2;
  bool has_uchip1() const;
  void clear_uchip1();
  static const int kUchip1FieldNumber = 2;
  ::google::protobuf::int32 uchip1() const;
  void set_uchip1(::google::protobuf::int32 value);

  // required int32 uchip2 = 3;
  bool has_uchip2() const;
  void clear_uchip2();
  static const int kUchip2FieldNumber = 3;
  ::google::protobuf::int32 uchip2() const;
  void set_uchip2(::google::protobuf::int32 value);

  // required int32 udata1 = 4;
  bool has_udata1() const;
  void clear_udata1();
  static const int kUdata1FieldNumber = 4;
  ::google::protobuf::int32 udata1() const;
  void set_udata1(::google::protobuf::int32 value);

  // required int32 udata2 = 5;
  bool has_udata2() const;
  void clear_udata2();
  static const int kUdata2FieldNumber = 5;
  ::google::protobuf::int32 udata2() const;
  void set_udata2(::google::protobuf::int32 value);

  // required int32 udata3 = 6;
  bool has_udata3() const;
  void clear_udata3();
  static const int kUdata3FieldNumber = 6;
  ::google::protobuf::int32 udata3() const;
  void set_udata3(::google::protobuf::int32 value);

  // required int32 uexp = 7;
  bool has_uexp() const;
  void clear_uexp();
  static const int kUexpFieldNumber = 7;
  ::google::protobuf::int32 uexp() const;
  void set_uexp(::google::protobuf::int32 value);

  // required int32 uvip = 8;
  bool has_uvip() const;
  void clear_uvip();
  static const int kUvipFieldNumber = 8;
  ::google::protobuf::int32 uvip() const;
  void set_uvip(::google::protobuf::int32 value);

  // required int32 bonues_status = 9;
  bool has_bonues_status() const;
  void clear_bonues_status();
  static const int kBonuesStatusFieldNumber = 9;
  ::google::protobuf::int32 bonues_status() const;
  void set_bonues_status(::google::protobuf::int32 value);

  // required int32 bonues = 10;
  bool has_bonues() const;
  void clear_bonues();
  static const int kBonuesFieldNumber = 10;
  ::google::protobuf::int32 bonues() const;
  void set_bonues(::google::protobuf::int32 value);

  // required int32 days = 11;
  bool has_days() const;
  void clear_days();
  static const int kDaysFieldNumber = 11;
  ::google::protobuf::int32 days() const;
  void set_days(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UserGameInfo)
 private:
  void set_has_uchip();
  void clear_has_uchip();
  void set_has_uchip1();
  void clear_has_uchip1();
  void set_has_uchip2();
  void clear_has_uchip2();
  void set_has_udata1();
  void clear_has_udata1();
  void set_has_udata2();
  void clear_has_udata2();
  void set_has_udata3();
  void clear_has_udata3();
  void set_has_uexp();
  void clear_has_uexp();
  void set_has_uvip();
  void clear_has_uvip();
  void set_has_bonues_status();
  void clear_has_bonues_status();
  void set_has_bonues();
  void clear_has_bonues();
  void set_has_days();
  void clear_has_days();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 uchip_;
  ::google::protobuf::int32 uchip1_;
  ::google::protobuf::int32 uchip2_;
  ::google::protobuf::int32 udata1_;
  ::google::protobuf::int32 udata2_;
  ::google::protobuf::int32 udata3_;
  ::google::protobuf::int32 uexp_;
  ::google::protobuf::int32 uvip_;
  ::google::protobuf::int32 bonues_status_;
  ::google::protobuf::int32 bonues_;
  ::google::protobuf::int32 days_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUserGameInfoImpl();
};
// -------------------------------------------------------------------

class GetUgameInfoRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetUgameInfoRes) */ {
 public:
  GetUgameInfoRes();
  virtual ~GetUgameInfoRes();

  GetUgameInfoRes(const GetUgameInfoRes& from);

  inline GetUgameInfoRes& operator=(const GetUgameInfoRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUgameInfoRes(GetUgameInfoRes&& from) noexcept
    : GetUgameInfoRes() {
    *this = ::std::move(from);
  }

  inline GetUgameInfoRes& operator=(GetUgameInfoRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUgameInfoRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetUgameInfoRes* internal_default_instance() {
    return reinterpret_cast<const GetUgameInfoRes*>(
               &_GetUgameInfoRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(GetUgameInfoRes* other);
  friend void swap(GetUgameInfoRes& a, GetUgameInfoRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUgameInfoRes* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUgameInfoRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetUgameInfoRes& from);
  void MergeFrom(const GetUgameInfoRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetUgameInfoRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .UserGameInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::UserGameInfo& info() const;
  ::UserGameInfo* release_info();
  ::UserGameInfo* mutable_info();
  void set_allocated_info(::UserGameInfo* info);

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GetUgameInfoRes)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::UserGameInfo* info_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGetUgameInfoResImpl();
};
// -------------------------------------------------------------------

class RecvLoginBonuesRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RecvLoginBonuesRes) */ {
 public:
  RecvLoginBonuesRes();
  virtual ~RecvLoginBonuesRes();

  RecvLoginBonuesRes(const RecvLoginBonuesRes& from);

  inline RecvLoginBonuesRes& operator=(const RecvLoginBonuesRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RecvLoginBonuesRes(RecvLoginBonuesRes&& from) noexcept
    : RecvLoginBonuesRes() {
    *this = ::std::move(from);
  }

  inline RecvLoginBonuesRes& operator=(RecvLoginBonuesRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecvLoginBonuesRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RecvLoginBonuesRes* internal_default_instance() {
    return reinterpret_cast<const RecvLoginBonuesRes*>(
               &_RecvLoginBonuesRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(RecvLoginBonuesRes* other);
  friend void swap(RecvLoginBonuesRes& a, RecvLoginBonuesRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RecvLoginBonuesRes* New() const PROTOBUF_FINAL { return New(NULL); }

  RecvLoginBonuesRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RecvLoginBonuesRes& from);
  void MergeFrom(const RecvLoginBonuesRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RecvLoginBonuesRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RecvLoginBonuesRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsRecvLoginBonuesResImpl();
};
// -------------------------------------------------------------------

class WorldChipRankInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WorldChipRankInfo) */ {
 public:
  WorldChipRankInfo();
  virtual ~WorldChipRankInfo();

  WorldChipRankInfo(const WorldChipRankInfo& from);

  inline WorldChipRankInfo& operator=(const WorldChipRankInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldChipRankInfo(WorldChipRankInfo&& from) noexcept
    : WorldChipRankInfo() {
    *this = ::std::move(from);
  }

  inline WorldChipRankInfo& operator=(WorldChipRankInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldChipRankInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorldChipRankInfo* internal_default_instance() {
    return reinterpret_cast<const WorldChipRankInfo*>(
               &_WorldChipRankInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(WorldChipRankInfo* other);
  friend void swap(WorldChipRankInfo& a, WorldChipRankInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldChipRankInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldChipRankInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldChipRankInfo& from);
  void MergeFrom(const WorldChipRankInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldChipRankInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string unick = 1;
  bool has_unick() const;
  void clear_unick();
  static const int kUnickFieldNumber = 1;
  const ::std::string& unick() const;
  void set_unick(const ::std::string& value);
  #if LANG_CXX11
  void set_unick(::std::string&& value);
  #endif
  void set_unick(const char* value);
  void set_unick(const char* value, size_t size);
  ::std::string* mutable_unick();
  ::std::string* release_unick();
  void set_allocated_unick(::std::string* unick);

  // required int32 uface = 2;
  bool has_uface() const;
  void clear_uface();
  static const int kUfaceFieldNumber = 2;
  ::google::protobuf::int32 uface() const;
  void set_uface(::google::protobuf::int32 value);

  // required int32 usex = 3;
  bool has_usex() const;
  void clear_usex();
  static const int kUsexFieldNumber = 3;
  ::google::protobuf::int32 usex() const;
  void set_usex(::google::protobuf::int32 value);

  // required int32 uvip = 4;
  bool has_uvip() const;
  void clear_uvip();
  static const int kUvipFieldNumber = 4;
  ::google::protobuf::int32 uvip() const;
  void set_uvip(::google::protobuf::int32 value);

  // required int32 uchip = 5;
  bool has_uchip() const;
  void clear_uchip();
  static const int kUchipFieldNumber = 5;
  ::google::protobuf::int32 uchip() const;
  void set_uchip(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WorldChipRankInfo)
 private:
  void set_has_unick();
  void clear_has_unick();
  void set_has_uface();
  void clear_has_uface();
  void set_has_usex();
  void clear_has_usex();
  void set_has_uvip();
  void clear_has_uvip();
  void set_has_uchip();
  void clear_has_uchip();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr unick_;
  ::google::protobuf::int32 uface_;
  ::google::protobuf::int32 usex_;
  ::google::protobuf::int32 uvip_;
  ::google::protobuf::int32 uchip_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsWorldChipRankInfoImpl();
};
// -------------------------------------------------------------------

class GetWorldRankUchipReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetWorldRankUchipReq) */ {
 public:
  GetWorldRankUchipReq();
  virtual ~GetWorldRankUchipReq();

  GetWorldRankUchipReq(const GetWorldRankUchipReq& from);

  inline GetWorldRankUchipReq& operator=(const GetWorldRankUchipReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetWorldRankUchipReq(GetWorldRankUchipReq&& from) noexcept
    : GetWorldRankUchipReq() {
    *this = ::std::move(from);
  }

  inline GetWorldRankUchipReq& operator=(GetWorldRankUchipReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetWorldRankUchipReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetWorldRankUchipReq* internal_default_instance() {
    return reinterpret_cast<const GetWorldRankUchipReq*>(
               &_GetWorldRankUchipReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(GetWorldRankUchipReq* other);
  friend void swap(GetWorldRankUchipReq& a, GetWorldRankUchipReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetWorldRankUchipReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetWorldRankUchipReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetWorldRankUchipReq& from);
  void MergeFrom(const GetWorldRankUchipReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetWorldRankUchipReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ranknum = 1;
  bool has_ranknum() const;
  void clear_ranknum();
  static const int kRanknumFieldNumber = 1;
  ::google::protobuf::int32 ranknum() const;
  void set_ranknum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GetWorldRankUchipReq)
 private:
  void set_has_ranknum();
  void clear_has_ranknum();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 ranknum_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGetWorldRankUchipReqImpl();
};
// -------------------------------------------------------------------

class GetWorldRankUchipRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetWorldRankUchipRes) */ {
 public:
  GetWorldRankUchipRes();
  virtual ~GetWorldRankUchipRes();

  GetWorldRankUchipRes(const GetWorldRankUchipRes& from);

  inline GetWorldRankUchipRes& operator=(const GetWorldRankUchipRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetWorldRankUchipRes(GetWorldRankUchipRes&& from) noexcept
    : GetWorldRankUchipRes() {
    *this = ::std::move(from);
  }

  inline GetWorldRankUchipRes& operator=(GetWorldRankUchipRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetWorldRankUchipRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetWorldRankUchipRes* internal_default_instance() {
    return reinterpret_cast<const GetWorldRankUchipRes*>(
               &_GetWorldRankUchipRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(GetWorldRankUchipRes* other);
  friend void swap(GetWorldRankUchipRes& a, GetWorldRankUchipRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetWorldRankUchipRes* New() const PROTOBUF_FINAL { return New(NULL); }

  GetWorldRankUchipRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetWorldRankUchipRes& from);
  void MergeFrom(const GetWorldRankUchipRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetWorldRankUchipRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .WorldChipRankInfo rankinfo = 2;
  int rankinfo_size() const;
  void clear_rankinfo();
  static const int kRankinfoFieldNumber = 2;
  const ::WorldChipRankInfo& rankinfo(int index) const;
  ::WorldChipRankInfo* mutable_rankinfo(int index);
  ::WorldChipRankInfo* add_rankinfo();
  ::google::protobuf::RepeatedPtrField< ::WorldChipRankInfo >*
      mutable_rankinfo();
  const ::google::protobuf::RepeatedPtrField< ::WorldChipRankInfo >&
      rankinfo() const;

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GetWorldRankUchipRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::WorldChipRankInfo > rankinfo_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGetWorldRankUchipResImpl();
};
// -------------------------------------------------------------------

class GetSystemMessageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetSystemMessageReq) */ {
 public:
  GetSystemMessageReq();
  virtual ~GetSystemMessageReq();

  GetSystemMessageReq(const GetSystemMessageReq& from);

  inline GetSystemMessageReq& operator=(const GetSystemMessageReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSystemMessageReq(GetSystemMessageReq&& from) noexcept
    : GetSystemMessageReq() {
    *this = ::std::move(from);
  }

  inline GetSystemMessageReq& operator=(GetSystemMessageReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSystemMessageReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSystemMessageReq* internal_default_instance() {
    return reinterpret_cast<const GetSystemMessageReq*>(
               &_GetSystemMessageReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(GetSystemMessageReq* other);
  friend void swap(GetSystemMessageReq& a, GetSystemMessageReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSystemMessageReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSystemMessageReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSystemMessageReq& from);
  void MergeFrom(const GetSystemMessageReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSystemMessageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 vernum = 1;
  bool has_vernum() const;
  void clear_vernum();
  static const int kVernumFieldNumber = 1;
  ::google::protobuf::int32 vernum() const;
  void set_vernum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GetSystemMessageReq)
 private:
  void set_has_vernum();
  void clear_has_vernum();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 vernum_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGetSystemMessageReqImpl();
};
// -------------------------------------------------------------------

class GetSystemMessageRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetSystemMessageRes) */ {
 public:
  GetSystemMessageRes();
  virtual ~GetSystemMessageRes();

  GetSystemMessageRes(const GetSystemMessageRes& from);

  inline GetSystemMessageRes& operator=(const GetSystemMessageRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSystemMessageRes(GetSystemMessageRes&& from) noexcept
    : GetSystemMessageRes() {
    *this = ::std::move(from);
  }

  inline GetSystemMessageRes& operator=(GetSystemMessageRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSystemMessageRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSystemMessageRes* internal_default_instance() {
    return reinterpret_cast<const GetSystemMessageRes*>(
               &_GetSystemMessageRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(GetSystemMessageRes* other);
  friend void swap(GetSystemMessageRes& a, GetSystemMessageRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSystemMessageRes* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSystemMessageRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSystemMessageRes& from);
  void MergeFrom(const GetSystemMessageRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSystemMessageRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string info = 3;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 3;
  const ::std::string& info(int index) const;
  ::std::string* mutable_info(int index);
  void set_info(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_info(int index, ::std::string&& value);
  #endif
  void set_info(int index, const char* value);
  void set_info(int index, const char* value, size_t size);
  ::std::string* add_info();
  void add_info(const ::std::string& value);
  #if LANG_CXX11
  void add_info(::std::string&& value);
  #endif
  void add_info(const char* value);
  void add_info(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& info() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_info();

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // required int32 vernum = 2;
  bool has_vernum() const;
  void clear_vernum();
  static const int kVernumFieldNumber = 2;
  ::google::protobuf::int32 vernum() const;
  void set_vernum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GetSystemMessageRes)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_vernum();
  void clear_has_vernum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> info_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 vernum_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGetSystemMessageResImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GuestLoginReq

// required string guestkey = 1;
inline bool GuestLoginReq::has_guestkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuestLoginReq::set_has_guestkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuestLoginReq::clear_has_guestkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuestLoginReq::clear_guestkey() {
  guestkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guestkey();
}
inline const ::std::string& GuestLoginReq::guestkey() const {
  // @@protoc_insertion_point(field_get:GuestLoginReq.guestkey)
  return guestkey_.GetNoArena();
}
inline void GuestLoginReq::set_guestkey(const ::std::string& value) {
  set_has_guestkey();
  guestkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuestLoginReq.guestkey)
}
#if LANG_CXX11
inline void GuestLoginReq::set_guestkey(::std::string&& value) {
  set_has_guestkey();
  guestkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuestLoginReq.guestkey)
}
#endif
inline void GuestLoginReq::set_guestkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guestkey();
  guestkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuestLoginReq.guestkey)
}
inline void GuestLoginReq::set_guestkey(const char* value, size_t size) {
  set_has_guestkey();
  guestkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuestLoginReq.guestkey)
}
inline ::std::string* GuestLoginReq::mutable_guestkey() {
  set_has_guestkey();
  // @@protoc_insertion_point(field_mutable:GuestLoginReq.guestkey)
  return guestkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuestLoginReq::release_guestkey() {
  // @@protoc_insertion_point(field_release:GuestLoginReq.guestkey)
  clear_has_guestkey();
  return guestkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuestLoginReq::set_allocated_guestkey(::std::string* guestkey) {
  if (guestkey != NULL) {
    set_has_guestkey();
  } else {
    clear_has_guestkey();
  }
  guestkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guestkey);
  // @@protoc_insertion_point(field_set_allocated:GuestLoginReq.guestkey)
}

// -------------------------------------------------------------------

// UnameLoginReq

// required string uname = 1;
inline bool UnameLoginReq::has_uname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnameLoginReq::set_has_uname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnameLoginReq::clear_has_uname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnameLoginReq::clear_uname() {
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uname();
}
inline const ::std::string& UnameLoginReq::uname() const {
  // @@protoc_insertion_point(field_get:UnameLoginReq.uname)
  return uname_.GetNoArena();
}
inline void UnameLoginReq::set_uname(const ::std::string& value) {
  set_has_uname();
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UnameLoginReq.uname)
}
#if LANG_CXX11
inline void UnameLoginReq::set_uname(::std::string&& value) {
  set_has_uname();
  uname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UnameLoginReq.uname)
}
#endif
inline void UnameLoginReq::set_uname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uname();
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UnameLoginReq.uname)
}
inline void UnameLoginReq::set_uname(const char* value, size_t size) {
  set_has_uname();
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UnameLoginReq.uname)
}
inline ::std::string* UnameLoginReq::mutable_uname() {
  set_has_uname();
  // @@protoc_insertion_point(field_mutable:UnameLoginReq.uname)
  return uname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnameLoginReq::release_uname() {
  // @@protoc_insertion_point(field_release:UnameLoginReq.uname)
  clear_has_uname();
  return uname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnameLoginReq::set_allocated_uname(::std::string* uname) {
  if (uname != NULL) {
    set_has_uname();
  } else {
    clear_has_uname();
  }
  uname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uname);
  // @@protoc_insertion_point(field_set_allocated:UnameLoginReq.uname)
}

// required string upwd = 2;
inline bool UnameLoginReq::has_upwd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnameLoginReq::set_has_upwd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnameLoginReq::clear_has_upwd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnameLoginReq::clear_upwd() {
  upwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_upwd();
}
inline const ::std::string& UnameLoginReq::upwd() const {
  // @@protoc_insertion_point(field_get:UnameLoginReq.upwd)
  return upwd_.GetNoArena();
}
inline void UnameLoginReq::set_upwd(const ::std::string& value) {
  set_has_upwd();
  upwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UnameLoginReq.upwd)
}
#if LANG_CXX11
inline void UnameLoginReq::set_upwd(::std::string&& value) {
  set_has_upwd();
  upwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UnameLoginReq.upwd)
}
#endif
inline void UnameLoginReq::set_upwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_upwd();
  upwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UnameLoginReq.upwd)
}
inline void UnameLoginReq::set_upwd(const char* value, size_t size) {
  set_has_upwd();
  upwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UnameLoginReq.upwd)
}
inline ::std::string* UnameLoginReq::mutable_upwd() {
  set_has_upwd();
  // @@protoc_insertion_point(field_mutable:UnameLoginReq.upwd)
  return upwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnameLoginReq::release_upwd() {
  // @@protoc_insertion_point(field_release:UnameLoginReq.upwd)
  clear_has_upwd();
  return upwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnameLoginReq::set_allocated_upwd(::std::string* upwd) {
  if (upwd != NULL) {
    set_has_upwd();
  } else {
    clear_has_upwd();
  }
  upwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), upwd);
  // @@protoc_insertion_point(field_set_allocated:UnameLoginReq.upwd)
}

// -------------------------------------------------------------------

// UserCenterInfo

// required string unick = 1;
inline bool UserCenterInfo::has_unick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserCenterInfo::set_has_unick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserCenterInfo::clear_has_unick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserCenterInfo::clear_unick() {
  unick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_unick();
}
inline const ::std::string& UserCenterInfo::unick() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.unick)
  return unick_.GetNoArena();
}
inline void UserCenterInfo::set_unick(const ::std::string& value) {
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserCenterInfo.unick)
}
#if LANG_CXX11
inline void UserCenterInfo::set_unick(::std::string&& value) {
  set_has_unick();
  unick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserCenterInfo.unick)
}
#endif
inline void UserCenterInfo::set_unick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserCenterInfo.unick)
}
inline void UserCenterInfo::set_unick(const char* value, size_t size) {
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserCenterInfo.unick)
}
inline ::std::string* UserCenterInfo::mutable_unick() {
  set_has_unick();
  // @@protoc_insertion_point(field_mutable:UserCenterInfo.unick)
  return unick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserCenterInfo::release_unick() {
  // @@protoc_insertion_point(field_release:UserCenterInfo.unick)
  clear_has_unick();
  return unick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserCenterInfo::set_allocated_unick(::std::string* unick) {
  if (unick != NULL) {
    set_has_unick();
  } else {
    clear_has_unick();
  }
  unick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unick);
  // @@protoc_insertion_point(field_set_allocated:UserCenterInfo.unick)
}

// required int32 sex = 2;
inline bool UserCenterInfo::has_sex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserCenterInfo::set_has_sex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserCenterInfo::clear_has_sex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserCenterInfo::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 UserCenterInfo::sex() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.sex)
  return sex_;
}
inline void UserCenterInfo::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:UserCenterInfo.sex)
}

// required int32 face = 3;
inline bool UserCenterInfo::has_face() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserCenterInfo::set_has_face() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserCenterInfo::clear_has_face() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserCenterInfo::clear_face() {
  face_ = 0;
  clear_has_face();
}
inline ::google::protobuf::int32 UserCenterInfo::face() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.face)
  return face_;
}
inline void UserCenterInfo::set_face(::google::protobuf::int32 value) {
  set_has_face();
  face_ = value;
  // @@protoc_insertion_point(field_set:UserCenterInfo.face)
}

// required int32 uvip = 4;
inline bool UserCenterInfo::has_uvip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserCenterInfo::set_has_uvip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserCenterInfo::clear_has_uvip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserCenterInfo::clear_uvip() {
  uvip_ = 0;
  clear_has_uvip();
}
inline ::google::protobuf::int32 UserCenterInfo::uvip() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.uvip)
  return uvip_;
}
inline void UserCenterInfo::set_uvip(::google::protobuf::int32 value) {
  set_has_uvip();
  uvip_ = value;
  // @@protoc_insertion_point(field_set:UserCenterInfo.uvip)
}

// required int32 uid = 5;
inline bool UserCenterInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserCenterInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserCenterInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserCenterInfo::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 UserCenterInfo::uid() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.uid)
  return uid_;
}
inline void UserCenterInfo::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:UserCenterInfo.uid)
}

// -------------------------------------------------------------------

// GuestLoginRes

// required int32 status = 1;
inline bool GuestLoginRes::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuestLoginRes::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuestLoginRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuestLoginRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GuestLoginRes::status() const {
  // @@protoc_insertion_point(field_get:GuestLoginRes.status)
  return status_;
}
inline void GuestLoginRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:GuestLoginRes.status)
}

// optional .UserCenterInfo info = 2;
inline bool GuestLoginRes::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuestLoginRes::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuestLoginRes::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuestLoginRes::clear_info() {
  if (info_ != NULL) info_->Clear();
  clear_has_info();
}
inline const ::UserCenterInfo& GuestLoginRes::info() const {
  const ::UserCenterInfo* p = info_;
  // @@protoc_insertion_point(field_get:GuestLoginRes.info)
  return p != NULL ? *p : *reinterpret_cast<const ::UserCenterInfo*>(
      &::_UserCenterInfo_default_instance_);
}
inline ::UserCenterInfo* GuestLoginRes::release_info() {
  // @@protoc_insertion_point(field_release:GuestLoginRes.info)
  clear_has_info();
  ::UserCenterInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::UserCenterInfo* GuestLoginRes::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::UserCenterInfo;
  }
  // @@protoc_insertion_point(field_mutable:GuestLoginRes.info)
  return info_;
}
inline void GuestLoginRes::set_allocated_info(::UserCenterInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    set_has_info();
  } else {
    clear_has_info();
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:GuestLoginRes.info)
}

// -------------------------------------------------------------------

// UnameLoginRes

// required int32 status = 1;
inline bool UnameLoginRes::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnameLoginRes::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnameLoginRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnameLoginRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 UnameLoginRes::status() const {
  // @@protoc_insertion_point(field_get:UnameLoginRes.status)
  return status_;
}
inline void UnameLoginRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:UnameLoginRes.status)
}

// optional .UserCenterInfo info = 2;
inline bool UnameLoginRes::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnameLoginRes::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnameLoginRes::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnameLoginRes::clear_info() {
  if (info_ != NULL) info_->Clear();
  clear_has_info();
}
inline const ::UserCenterInfo& UnameLoginRes::info() const {
  const ::UserCenterInfo* p = info_;
  // @@protoc_insertion_point(field_get:UnameLoginRes.info)
  return p != NULL ? *p : *reinterpret_cast<const ::UserCenterInfo*>(
      &::_UserCenterInfo_default_instance_);
}
inline ::UserCenterInfo* UnameLoginRes::release_info() {
  // @@protoc_insertion_point(field_release:UnameLoginRes.info)
  clear_has_info();
  ::UserCenterInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::UserCenterInfo* UnameLoginRes::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::UserCenterInfo;
  }
  // @@protoc_insertion_point(field_mutable:UnameLoginRes.info)
  return info_;
}
inline void UnameLoginRes::set_allocated_info(::UserCenterInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    set_has_info();
  } else {
    clear_has_info();
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:UnameLoginRes.info)
}

// -------------------------------------------------------------------

// UserLostConn

// required int32 status = 1;
inline bool UserLostConn::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserLostConn::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserLostConn::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserLostConn::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 UserLostConn::status() const {
  // @@protoc_insertion_point(field_get:UserLostConn.status)
  return status_;
}
inline void UserLostConn::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:UserLostConn.status)
}

// -------------------------------------------------------------------

// Relogin

// required int32 status = 1;
inline bool Relogin::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Relogin::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Relogin::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Relogin::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 Relogin::status() const {
  // @@protoc_insertion_point(field_get:Relogin.status)
  return status_;
}
inline void Relogin::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Relogin.status)
}

// -------------------------------------------------------------------

// EditProfileReq

// required string unick = 1;
inline bool EditProfileReq::has_unick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EditProfileReq::set_has_unick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EditProfileReq::clear_has_unick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EditProfileReq::clear_unick() {
  unick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_unick();
}
inline const ::std::string& EditProfileReq::unick() const {
  // @@protoc_insertion_point(field_get:EditProfileReq.unick)
  return unick_.GetNoArena();
}
inline void EditProfileReq::set_unick(const ::std::string& value) {
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EditProfileReq.unick)
}
#if LANG_CXX11
inline void EditProfileReq::set_unick(::std::string&& value) {
  set_has_unick();
  unick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:EditProfileReq.unick)
}
#endif
inline void EditProfileReq::set_unick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EditProfileReq.unick)
}
inline void EditProfileReq::set_unick(const char* value, size_t size) {
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EditProfileReq.unick)
}
inline ::std::string* EditProfileReq::mutable_unick() {
  set_has_unick();
  // @@protoc_insertion_point(field_mutable:EditProfileReq.unick)
  return unick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EditProfileReq::release_unick() {
  // @@protoc_insertion_point(field_release:EditProfileReq.unick)
  clear_has_unick();
  return unick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditProfileReq::set_allocated_unick(::std::string* unick) {
  if (unick != NULL) {
    set_has_unick();
  } else {
    clear_has_unick();
  }
  unick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unick);
  // @@protoc_insertion_point(field_set_allocated:EditProfileReq.unick)
}

// required int32 uface = 2;
inline bool EditProfileReq::has_uface() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EditProfileReq::set_has_uface() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EditProfileReq::clear_has_uface() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EditProfileReq::clear_uface() {
  uface_ = 0;
  clear_has_uface();
}
inline ::google::protobuf::int32 EditProfileReq::uface() const {
  // @@protoc_insertion_point(field_get:EditProfileReq.uface)
  return uface_;
}
inline void EditProfileReq::set_uface(::google::protobuf::int32 value) {
  set_has_uface();
  uface_ = value;
  // @@protoc_insertion_point(field_set:EditProfileReq.uface)
}

// required int32 usex = 3;
inline bool EditProfileReq::has_usex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EditProfileReq::set_has_usex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EditProfileReq::clear_has_usex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EditProfileReq::clear_usex() {
  usex_ = 0;
  clear_has_usex();
}
inline ::google::protobuf::int32 EditProfileReq::usex() const {
  // @@protoc_insertion_point(field_get:EditProfileReq.usex)
  return usex_;
}
inline void EditProfileReq::set_usex(::google::protobuf::int32 value) {
  set_has_usex();
  usex_ = value;
  // @@protoc_insertion_point(field_set:EditProfileReq.usex)
}

// -------------------------------------------------------------------

// EditProfileRes

// required int32 status = 1;
inline bool EditProfileRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EditProfileRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EditProfileRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EditProfileRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 EditProfileRes::status() const {
  // @@protoc_insertion_point(field_get:EditProfileRes.status)
  return status_;
}
inline void EditProfileRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:EditProfileRes.status)
}

// -------------------------------------------------------------------

// AccountUpgradeReq

// required string uname = 1;
inline bool AccountUpgradeReq::has_uname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountUpgradeReq::set_has_uname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountUpgradeReq::clear_has_uname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountUpgradeReq::clear_uname() {
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uname();
}
inline const ::std::string& AccountUpgradeReq::uname() const {
  // @@protoc_insertion_point(field_get:AccountUpgradeReq.uname)
  return uname_.GetNoArena();
}
inline void AccountUpgradeReq::set_uname(const ::std::string& value) {
  set_has_uname();
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountUpgradeReq.uname)
}
#if LANG_CXX11
inline void AccountUpgradeReq::set_uname(::std::string&& value) {
  set_has_uname();
  uname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountUpgradeReq.uname)
}
#endif
inline void AccountUpgradeReq::set_uname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uname();
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountUpgradeReq.uname)
}
inline void AccountUpgradeReq::set_uname(const char* value, size_t size) {
  set_has_uname();
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountUpgradeReq.uname)
}
inline ::std::string* AccountUpgradeReq::mutable_uname() {
  set_has_uname();
  // @@protoc_insertion_point(field_mutable:AccountUpgradeReq.uname)
  return uname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountUpgradeReq::release_uname() {
  // @@protoc_insertion_point(field_release:AccountUpgradeReq.uname)
  clear_has_uname();
  return uname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountUpgradeReq::set_allocated_uname(::std::string* uname) {
  if (uname != NULL) {
    set_has_uname();
  } else {
    clear_has_uname();
  }
  uname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uname);
  // @@protoc_insertion_point(field_set_allocated:AccountUpgradeReq.uname)
}

// required string upwdmd5 = 2;
inline bool AccountUpgradeReq::has_upwdmd5() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccountUpgradeReq::set_has_upwdmd5() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccountUpgradeReq::clear_has_upwdmd5() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccountUpgradeReq::clear_upwdmd5() {
  upwdmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_upwdmd5();
}
inline const ::std::string& AccountUpgradeReq::upwdmd5() const {
  // @@protoc_insertion_point(field_get:AccountUpgradeReq.upwdmd5)
  return upwdmd5_.GetNoArena();
}
inline void AccountUpgradeReq::set_upwdmd5(const ::std::string& value) {
  set_has_upwdmd5();
  upwdmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountUpgradeReq.upwdmd5)
}
#if LANG_CXX11
inline void AccountUpgradeReq::set_upwdmd5(::std::string&& value) {
  set_has_upwdmd5();
  upwdmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountUpgradeReq.upwdmd5)
}
#endif
inline void AccountUpgradeReq::set_upwdmd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_upwdmd5();
  upwdmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountUpgradeReq.upwdmd5)
}
inline void AccountUpgradeReq::set_upwdmd5(const char* value, size_t size) {
  set_has_upwdmd5();
  upwdmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountUpgradeReq.upwdmd5)
}
inline ::std::string* AccountUpgradeReq::mutable_upwdmd5() {
  set_has_upwdmd5();
  // @@protoc_insertion_point(field_mutable:AccountUpgradeReq.upwdmd5)
  return upwdmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountUpgradeReq::release_upwdmd5() {
  // @@protoc_insertion_point(field_release:AccountUpgradeReq.upwdmd5)
  clear_has_upwdmd5();
  return upwdmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountUpgradeReq::set_allocated_upwdmd5(::std::string* upwdmd5) {
  if (upwdmd5 != NULL) {
    set_has_upwdmd5();
  } else {
    clear_has_upwdmd5();
  }
  upwdmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), upwdmd5);
  // @@protoc_insertion_point(field_set_allocated:AccountUpgradeReq.upwdmd5)
}

// -------------------------------------------------------------------

// AccountUpgradeRes

// required int32 status = 1;
inline bool AccountUpgradeRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountUpgradeRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountUpgradeRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountUpgradeRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 AccountUpgradeRes::status() const {
  // @@protoc_insertion_point(field_get:AccountUpgradeRes.status)
  return status_;
}
inline void AccountUpgradeRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:AccountUpgradeRes.status)
}

// -------------------------------------------------------------------

// LoginOutRes

// required int32 status = 1;
inline bool LoginOutRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginOutRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginOutRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginOutRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 LoginOutRes::status() const {
  // @@protoc_insertion_point(field_get:LoginOutRes.status)
  return status_;
}
inline void LoginOutRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:LoginOutRes.status)
}

// -------------------------------------------------------------------

// UserGameInfo

// required int32 uchip = 1;
inline bool UserGameInfo::has_uchip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserGameInfo::set_has_uchip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserGameInfo::clear_has_uchip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserGameInfo::clear_uchip() {
  uchip_ = 0;
  clear_has_uchip();
}
inline ::google::protobuf::int32 UserGameInfo::uchip() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.uchip)
  return uchip_;
}
inline void UserGameInfo::set_uchip(::google::protobuf::int32 value) {
  set_has_uchip();
  uchip_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.uchip)
}

// required int32 uchip1 = 2;
inline bool UserGameInfo::has_uchip1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserGameInfo::set_has_uchip1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserGameInfo::clear_has_uchip1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserGameInfo::clear_uchip1() {
  uchip1_ = 0;
  clear_has_uchip1();
}
inline ::google::protobuf::int32 UserGameInfo::uchip1() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.uchip1)
  return uchip1_;
}
inline void UserGameInfo::set_uchip1(::google::protobuf::int32 value) {
  set_has_uchip1();
  uchip1_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.uchip1)
}

// required int32 uchip2 = 3;
inline bool UserGameInfo::has_uchip2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserGameInfo::set_has_uchip2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserGameInfo::clear_has_uchip2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserGameInfo::clear_uchip2() {
  uchip2_ = 0;
  clear_has_uchip2();
}
inline ::google::protobuf::int32 UserGameInfo::uchip2() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.uchip2)
  return uchip2_;
}
inline void UserGameInfo::set_uchip2(::google::protobuf::int32 value) {
  set_has_uchip2();
  uchip2_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.uchip2)
}

// required int32 udata1 = 4;
inline bool UserGameInfo::has_udata1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserGameInfo::set_has_udata1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserGameInfo::clear_has_udata1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserGameInfo::clear_udata1() {
  udata1_ = 0;
  clear_has_udata1();
}
inline ::google::protobuf::int32 UserGameInfo::udata1() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.udata1)
  return udata1_;
}
inline void UserGameInfo::set_udata1(::google::protobuf::int32 value) {
  set_has_udata1();
  udata1_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.udata1)
}

// required int32 udata2 = 5;
inline bool UserGameInfo::has_udata2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserGameInfo::set_has_udata2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserGameInfo::clear_has_udata2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserGameInfo::clear_udata2() {
  udata2_ = 0;
  clear_has_udata2();
}
inline ::google::protobuf::int32 UserGameInfo::udata2() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.udata2)
  return udata2_;
}
inline void UserGameInfo::set_udata2(::google::protobuf::int32 value) {
  set_has_udata2();
  udata2_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.udata2)
}

// required int32 udata3 = 6;
inline bool UserGameInfo::has_udata3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserGameInfo::set_has_udata3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserGameInfo::clear_has_udata3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserGameInfo::clear_udata3() {
  udata3_ = 0;
  clear_has_udata3();
}
inline ::google::protobuf::int32 UserGameInfo::udata3() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.udata3)
  return udata3_;
}
inline void UserGameInfo::set_udata3(::google::protobuf::int32 value) {
  set_has_udata3();
  udata3_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.udata3)
}

// required int32 uexp = 7;
inline bool UserGameInfo::has_uexp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserGameInfo::set_has_uexp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserGameInfo::clear_has_uexp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserGameInfo::clear_uexp() {
  uexp_ = 0;
  clear_has_uexp();
}
inline ::google::protobuf::int32 UserGameInfo::uexp() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.uexp)
  return uexp_;
}
inline void UserGameInfo::set_uexp(::google::protobuf::int32 value) {
  set_has_uexp();
  uexp_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.uexp)
}

// required int32 uvip = 8;
inline bool UserGameInfo::has_uvip() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserGameInfo::set_has_uvip() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserGameInfo::clear_has_uvip() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserGameInfo::clear_uvip() {
  uvip_ = 0;
  clear_has_uvip();
}
inline ::google::protobuf::int32 UserGameInfo::uvip() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.uvip)
  return uvip_;
}
inline void UserGameInfo::set_uvip(::google::protobuf::int32 value) {
  set_has_uvip();
  uvip_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.uvip)
}

// required int32 bonues_status = 9;
inline bool UserGameInfo::has_bonues_status() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UserGameInfo::set_has_bonues_status() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UserGameInfo::clear_has_bonues_status() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UserGameInfo::clear_bonues_status() {
  bonues_status_ = 0;
  clear_has_bonues_status();
}
inline ::google::protobuf::int32 UserGameInfo::bonues_status() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.bonues_status)
  return bonues_status_;
}
inline void UserGameInfo::set_bonues_status(::google::protobuf::int32 value) {
  set_has_bonues_status();
  bonues_status_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.bonues_status)
}

// required int32 bonues = 10;
inline bool UserGameInfo::has_bonues() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserGameInfo::set_has_bonues() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserGameInfo::clear_has_bonues() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserGameInfo::clear_bonues() {
  bonues_ = 0;
  clear_has_bonues();
}
inline ::google::protobuf::int32 UserGameInfo::bonues() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.bonues)
  return bonues_;
}
inline void UserGameInfo::set_bonues(::google::protobuf::int32 value) {
  set_has_bonues();
  bonues_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.bonues)
}

// required int32 days = 11;
inline bool UserGameInfo::has_days() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UserGameInfo::set_has_days() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UserGameInfo::clear_has_days() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UserGameInfo::clear_days() {
  days_ = 0;
  clear_has_days();
}
inline ::google::protobuf::int32 UserGameInfo::days() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.days)
  return days_;
}
inline void UserGameInfo::set_days(::google::protobuf::int32 value) {
  set_has_days();
  days_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.days)
}

// -------------------------------------------------------------------

// GetUgameInfoRes

// required int32 status = 1;
inline bool GetUgameInfoRes::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUgameInfoRes::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUgameInfoRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUgameInfoRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GetUgameInfoRes::status() const {
  // @@protoc_insertion_point(field_get:GetUgameInfoRes.status)
  return status_;
}
inline void GetUgameInfoRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:GetUgameInfoRes.status)
}

// optional .UserGameInfo info = 2;
inline bool GetUgameInfoRes::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUgameInfoRes::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUgameInfoRes::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUgameInfoRes::clear_info() {
  if (info_ != NULL) info_->Clear();
  clear_has_info();
}
inline const ::UserGameInfo& GetUgameInfoRes::info() const {
  const ::UserGameInfo* p = info_;
  // @@protoc_insertion_point(field_get:GetUgameInfoRes.info)
  return p != NULL ? *p : *reinterpret_cast<const ::UserGameInfo*>(
      &::_UserGameInfo_default_instance_);
}
inline ::UserGameInfo* GetUgameInfoRes::release_info() {
  // @@protoc_insertion_point(field_release:GetUgameInfoRes.info)
  clear_has_info();
  ::UserGameInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::UserGameInfo* GetUgameInfoRes::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::UserGameInfo;
  }
  // @@protoc_insertion_point(field_mutable:GetUgameInfoRes.info)
  return info_;
}
inline void GetUgameInfoRes::set_allocated_info(::UserGameInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    set_has_info();
  } else {
    clear_has_info();
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:GetUgameInfoRes.info)
}

// -------------------------------------------------------------------

// RecvLoginBonuesRes

// required int32 status = 1;
inline bool RecvLoginBonuesRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecvLoginBonuesRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecvLoginBonuesRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecvLoginBonuesRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 RecvLoginBonuesRes::status() const {
  // @@protoc_insertion_point(field_get:RecvLoginBonuesRes.status)
  return status_;
}
inline void RecvLoginBonuesRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:RecvLoginBonuesRes.status)
}

// -------------------------------------------------------------------

// WorldChipRankInfo

// required string unick = 1;
inline bool WorldChipRankInfo::has_unick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldChipRankInfo::set_has_unick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldChipRankInfo::clear_has_unick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldChipRankInfo::clear_unick() {
  unick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_unick();
}
inline const ::std::string& WorldChipRankInfo::unick() const {
  // @@protoc_insertion_point(field_get:WorldChipRankInfo.unick)
  return unick_.GetNoArena();
}
inline void WorldChipRankInfo::set_unick(const ::std::string& value) {
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WorldChipRankInfo.unick)
}
#if LANG_CXX11
inline void WorldChipRankInfo::set_unick(::std::string&& value) {
  set_has_unick();
  unick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WorldChipRankInfo.unick)
}
#endif
inline void WorldChipRankInfo::set_unick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WorldChipRankInfo.unick)
}
inline void WorldChipRankInfo::set_unick(const char* value, size_t size) {
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WorldChipRankInfo.unick)
}
inline ::std::string* WorldChipRankInfo::mutable_unick() {
  set_has_unick();
  // @@protoc_insertion_point(field_mutable:WorldChipRankInfo.unick)
  return unick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorldChipRankInfo::release_unick() {
  // @@protoc_insertion_point(field_release:WorldChipRankInfo.unick)
  clear_has_unick();
  return unick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorldChipRankInfo::set_allocated_unick(::std::string* unick) {
  if (unick != NULL) {
    set_has_unick();
  } else {
    clear_has_unick();
  }
  unick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unick);
  // @@protoc_insertion_point(field_set_allocated:WorldChipRankInfo.unick)
}

// required int32 uface = 2;
inline bool WorldChipRankInfo::has_uface() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldChipRankInfo::set_has_uface() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldChipRankInfo::clear_has_uface() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldChipRankInfo::clear_uface() {
  uface_ = 0;
  clear_has_uface();
}
inline ::google::protobuf::int32 WorldChipRankInfo::uface() const {
  // @@protoc_insertion_point(field_get:WorldChipRankInfo.uface)
  return uface_;
}
inline void WorldChipRankInfo::set_uface(::google::protobuf::int32 value) {
  set_has_uface();
  uface_ = value;
  // @@protoc_insertion_point(field_set:WorldChipRankInfo.uface)
}

// required int32 usex = 3;
inline bool WorldChipRankInfo::has_usex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldChipRankInfo::set_has_usex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldChipRankInfo::clear_has_usex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldChipRankInfo::clear_usex() {
  usex_ = 0;
  clear_has_usex();
}
inline ::google::protobuf::int32 WorldChipRankInfo::usex() const {
  // @@protoc_insertion_point(field_get:WorldChipRankInfo.usex)
  return usex_;
}
inline void WorldChipRankInfo::set_usex(::google::protobuf::int32 value) {
  set_has_usex();
  usex_ = value;
  // @@protoc_insertion_point(field_set:WorldChipRankInfo.usex)
}

// required int32 uvip = 4;
inline bool WorldChipRankInfo::has_uvip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldChipRankInfo::set_has_uvip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldChipRankInfo::clear_has_uvip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldChipRankInfo::clear_uvip() {
  uvip_ = 0;
  clear_has_uvip();
}
inline ::google::protobuf::int32 WorldChipRankInfo::uvip() const {
  // @@protoc_insertion_point(field_get:WorldChipRankInfo.uvip)
  return uvip_;
}
inline void WorldChipRankInfo::set_uvip(::google::protobuf::int32 value) {
  set_has_uvip();
  uvip_ = value;
  // @@protoc_insertion_point(field_set:WorldChipRankInfo.uvip)
}

// required int32 uchip = 5;
inline bool WorldChipRankInfo::has_uchip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorldChipRankInfo::set_has_uchip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorldChipRankInfo::clear_has_uchip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorldChipRankInfo::clear_uchip() {
  uchip_ = 0;
  clear_has_uchip();
}
inline ::google::protobuf::int32 WorldChipRankInfo::uchip() const {
  // @@protoc_insertion_point(field_get:WorldChipRankInfo.uchip)
  return uchip_;
}
inline void WorldChipRankInfo::set_uchip(::google::protobuf::int32 value) {
  set_has_uchip();
  uchip_ = value;
  // @@protoc_insertion_point(field_set:WorldChipRankInfo.uchip)
}

// -------------------------------------------------------------------

// GetWorldRankUchipReq

// required int32 ranknum = 1;
inline bool GetWorldRankUchipReq::has_ranknum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetWorldRankUchipReq::set_has_ranknum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetWorldRankUchipReq::clear_has_ranknum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetWorldRankUchipReq::clear_ranknum() {
  ranknum_ = 0;
  clear_has_ranknum();
}
inline ::google::protobuf::int32 GetWorldRankUchipReq::ranknum() const {
  // @@protoc_insertion_point(field_get:GetWorldRankUchipReq.ranknum)
  return ranknum_;
}
inline void GetWorldRankUchipReq::set_ranknum(::google::protobuf::int32 value) {
  set_has_ranknum();
  ranknum_ = value;
  // @@protoc_insertion_point(field_set:GetWorldRankUchipReq.ranknum)
}

// -------------------------------------------------------------------

// GetWorldRankUchipRes

// required int32 status = 1;
inline bool GetWorldRankUchipRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetWorldRankUchipRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetWorldRankUchipRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetWorldRankUchipRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GetWorldRankUchipRes::status() const {
  // @@protoc_insertion_point(field_get:GetWorldRankUchipRes.status)
  return status_;
}
inline void GetWorldRankUchipRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:GetWorldRankUchipRes.status)
}

// repeated .WorldChipRankInfo rankinfo = 2;
inline int GetWorldRankUchipRes::rankinfo_size() const {
  return rankinfo_.size();
}
inline void GetWorldRankUchipRes::clear_rankinfo() {
  rankinfo_.Clear();
}
inline const ::WorldChipRankInfo& GetWorldRankUchipRes::rankinfo(int index) const {
  // @@protoc_insertion_point(field_get:GetWorldRankUchipRes.rankinfo)
  return rankinfo_.Get(index);
}
inline ::WorldChipRankInfo* GetWorldRankUchipRes::mutable_rankinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GetWorldRankUchipRes.rankinfo)
  return rankinfo_.Mutable(index);
}
inline ::WorldChipRankInfo* GetWorldRankUchipRes::add_rankinfo() {
  // @@protoc_insertion_point(field_add:GetWorldRankUchipRes.rankinfo)
  return rankinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::WorldChipRankInfo >*
GetWorldRankUchipRes::mutable_rankinfo() {
  // @@protoc_insertion_point(field_mutable_list:GetWorldRankUchipRes.rankinfo)
  return &rankinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::WorldChipRankInfo >&
GetWorldRankUchipRes::rankinfo() const {
  // @@protoc_insertion_point(field_list:GetWorldRankUchipRes.rankinfo)
  return rankinfo_;
}

// -------------------------------------------------------------------

// GetSystemMessageReq

// required int32 vernum = 1;
inline bool GetSystemMessageReq::has_vernum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSystemMessageReq::set_has_vernum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSystemMessageReq::clear_has_vernum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSystemMessageReq::clear_vernum() {
  vernum_ = 0;
  clear_has_vernum();
}
inline ::google::protobuf::int32 GetSystemMessageReq::vernum() const {
  // @@protoc_insertion_point(field_get:GetSystemMessageReq.vernum)
  return vernum_;
}
inline void GetSystemMessageReq::set_vernum(::google::protobuf::int32 value) {
  set_has_vernum();
  vernum_ = value;
  // @@protoc_insertion_point(field_set:GetSystemMessageReq.vernum)
}

// -------------------------------------------------------------------

// GetSystemMessageRes

// required int32 status = 1;
inline bool GetSystemMessageRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSystemMessageRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSystemMessageRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSystemMessageRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GetSystemMessageRes::status() const {
  // @@protoc_insertion_point(field_get:GetSystemMessageRes.status)
  return status_;
}
inline void GetSystemMessageRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:GetSystemMessageRes.status)
}

// required int32 vernum = 2;
inline bool GetSystemMessageRes::has_vernum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetSystemMessageRes::set_has_vernum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetSystemMessageRes::clear_has_vernum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetSystemMessageRes::clear_vernum() {
  vernum_ = 0;
  clear_has_vernum();
}
inline ::google::protobuf::int32 GetSystemMessageRes::vernum() const {
  // @@protoc_insertion_point(field_get:GetSystemMessageRes.vernum)
  return vernum_;
}
inline void GetSystemMessageRes::set_vernum(::google::protobuf::int32 value) {
  set_has_vernum();
  vernum_ = value;
  // @@protoc_insertion_point(field_set:GetSystemMessageRes.vernum)
}

// repeated string info = 3;
inline int GetSystemMessageRes::info_size() const {
  return info_.size();
}
inline void GetSystemMessageRes::clear_info() {
  info_.Clear();
}
inline const ::std::string& GetSystemMessageRes::info(int index) const {
  // @@protoc_insertion_point(field_get:GetSystemMessageRes.info)
  return info_.Get(index);
}
inline ::std::string* GetSystemMessageRes::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:GetSystemMessageRes.info)
  return info_.Mutable(index);
}
inline void GetSystemMessageRes::set_info(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:GetSystemMessageRes.info)
  info_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GetSystemMessageRes::set_info(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:GetSystemMessageRes.info)
  info_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GetSystemMessageRes::set_info(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  info_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:GetSystemMessageRes.info)
}
inline void GetSystemMessageRes::set_info(int index, const char* value, size_t size) {
  info_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GetSystemMessageRes.info)
}
inline ::std::string* GetSystemMessageRes::add_info() {
  // @@protoc_insertion_point(field_add_mutable:GetSystemMessageRes.info)
  return info_.Add();
}
inline void GetSystemMessageRes::add_info(const ::std::string& value) {
  info_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:GetSystemMessageRes.info)
}
#if LANG_CXX11
inline void GetSystemMessageRes::add_info(::std::string&& value) {
  info_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:GetSystemMessageRes.info)
}
#endif
inline void GetSystemMessageRes::add_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  info_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:GetSystemMessageRes.info)
}
inline void GetSystemMessageRes::add_info(const char* value, size_t size) {
  info_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:GetSystemMessageRes.info)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetSystemMessageRes::info() const {
  // @@protoc_insertion_point(field_list:GetSystemMessageRes.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetSystemMessageRes::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:GetSystemMessageRes.info)
  return &info_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Stype> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Stype>() {
  return ::Stype_descriptor();
}
template <> struct is_proto_enum< ::Cmd> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd>() {
  return ::Cmd_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_2eproto__INCLUDED
